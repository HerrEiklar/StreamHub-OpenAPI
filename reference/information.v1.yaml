openapi: 3.0.0
info:
  title: Information API
  version: 1.0.0
  description: 'StreamHub Information API - reads Video, User and other information'
  contact:
    name: Elias Huber
    url: 'http://www.huber.host'
    email: elias@huber.host
  termsOfService: 'http://streamhub.huber.host/tos'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'http://information-v1-api-edev-streamhub.0.0.0.0.xip.io:8083'
    description: mediaDetails
paths:
  '/video/{hash}':
    get:
      summary: Video GET endpoint
      tags:
        - video
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
                required:
                  - video
                readOnly: true
              examples: {}
      operationId: getVideoByHash
      description: Get a video by hash
    parameters:
      - $ref: '#/components/parameters/Hash'
components:
  schemas:
    Video:
      type: object
      title: Video
      description: Video Model
      x-examples: {}
      additionalProperties: false
      x-tags:
        - video
      properties:
        hash:
          $ref: ./Hash.v1.yaml
        title:
          type: string
          maxLength: 70
        description:
          type: string
          maxLength: 5000
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        location:
          $ref: ./Hash.v1.yaml
        type:
          type: array
          uniqueItems: true
          items:
            type: string
            enum:
              - dash
              - hls
              - other
      required:
        - title
        - description
        - uploadDate
        - location
        - type
  securitySchemes: {}
  responses: {}
  parameters:
    Hash:
      name: hash
      in: path
      schema:
        type: string
        pattern: '^[A-Za-z0-9]+$'
        minLength: 8
        maxLength: 16
      description: A 8 to 16 characters long hash
      required: true
  examples: {}
tags:
  - name: location
  - name: video
