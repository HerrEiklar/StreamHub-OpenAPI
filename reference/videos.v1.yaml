openapi: 3.0.0
info:
  title: videos
  version: 1.0.0
  description: StreamHub Video API - still local
  contact:
    name: Elias Huber
    url: 'http://www.huber.host'
    email: elias@huber.host
  termsOfService: 'http://streamhub.huber.host/tos'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'http://localhost:8080'
    description: api
paths:
  '/video/{videoHash}':
    parameters:
      - schema:
          type: string
          pattern: '^[A-Za-z0-9]+$'
          minLength: 8
          maxLength: 16
        name: videoHash
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - video
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
      operationId: getVideoByHash
      description: Get a video by hash
  '/location/{videoHash}':
    parameters:
      - schema:
          type: string
          pattern: '^[A-Za-z0-9]+$'
          minLength: 8
          maxLength: 16
        name: videoHash
        in: path
        required: true
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    $ref: '#/components/schemas/Location'
      operationId: getVideoLocationByHash
      description: Get location of a video by hash
      tags:
        - location
components:
  schemas:
    Video:
      type: object
      title: Video
      description: Video Model
      x-examples: {}
      additionalProperties: false
      properties:
        hash:
          type: string
          pattern: '^[A-Za-z0-9]+$'
          minLength: 8
          maxLength: 16
          readOnly: true
        title:
          type: string
          maxLength: 70
        description:
          type: string
          maxLength: 5000
          minLength: 0
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        location:
          $ref: '#/components/schemas/Location'
        type:
          type: string
          enum:
            - dash
            - hls
          maxLength: 8
      required:
        - title
        - description
        - uploadDate
        - location
        - type
      x-tags:
        - video
    User:
      type: object
      title: User
      deprecated: true
      properties:
        id:
          type: integer
          format: int32
          maximum: 999999
          readOnly: true
        username:
          type: string
          minLength: 2
          pattern: '^[^@#:`]+$'
          maxLength: 32
        discriminator:
          type: integer
          format: int32
          maximum: 9999
          minimum: 0
          readOnly: true
        locale:
          type: string
          minLength: 2
          maxLength: 2
          enum:
            - de
            - en
          pattern: '^[A-Za-z0-9]+$'
        veified:
          type: boolean
          default: false
          readOnly: true
        email:
          type: string
          pattern: '/^(?:[a-z0-9!#$%&''*+\/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/g'
          maxLength: 2000
          minLength: 6
        firstName:
          type: string
          pattern: '/^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.''-]+$/u'
          maxLength: 100
        lastName:
          type: string
          pattern: '/^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.''-]+$/u'
          maxLength: 100
      required:
        - username
        - discriminator
      x-tags:
        - user
    Location:
      type: object
      title: Location
      description: Location of a video file
      additionalProperties: false
      properties:
        hash:
          type: string
          pattern: '^[A-Za-z0-9]+$'
          minLength: 8
          maxLength: 16
        server:
          type: string
          minLength: 0
          maxLength: 40
          example: prod.s3.example.com
        uri:
          type: string
          format: uri
          minLength: 0
          maxLength: 300
        environment:
          type: string
          enum:
            - prod
            - dev
            - test
          maxLength: 10
          minLength: 1
      required:
        - hash
        - server
        - uri
        - environment
      x-tags:
        - location
  securitySchemes: {}
  responses: {}
  parameters: {}
  examples: {}
tags:
  - name: video
